{"version":3,"sources":["StateCases/states sync /^/.//cases.*/.json$","StateCases/index.js","Loader.js","Data.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Loader","title","this","datasets","labels","yAxes","countries","yAxis","options","cases","display","max","dateMin","dateMax","countryName","country","name","that","dateFormatData","setDateFormat","date","d","Date","dDay","getUTCDate","dMonth","getUTCMonth","dYear","getUTCFullYear","data","i","length","item","push","setTicks","setCountry","label","borderColor","color","yAxisID","fill","borderWidth","pointRadius","pointHoverRadius","showLine","borderDash","responseive","text","tooltips","mode","intersect","hover","type","position","ticks","getTicks","min","integrate","require","states","info","replace","loader","forEach","setCaseCountry","App","props","state","value","chartReference","React","createRef","setState","getMaxCases","getData","getDateMin","getDateMax","ref","responsive","hoverMode","stacked","scales","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b49be94e.chunk.js","sourcesContent":["var map = {\n\t\"./casesAcre.json\": 151,\n\t\"./casesAmapa.json\": 152,\n\t\"./casesAmazonas.json\": 153,\n\t\"./casesPara.json\": 154,\n\t\"./casesRondonia.json\": 155,\n\t\"./casesRoraima.json\": 156,\n\t\"./casesSao_Paulo.json\": 157,\n\t\"./casesTocantins.json\": 158\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 150;","const integrate = require('./states/integrate.json');\n\nlet states = integrate.states\nlet info = integrate.info\n\nfor(let i = 0; i < states.length; i++) {\n    const name = states[i].name.replace(' ', '_').replace(' ', '_').replace(' ', '_').replace(' ', '_')\n    states[i].cases = require(`./states/cases${name}.json`)\n}\n\nexport {\n    info,\n    states\n}","class Loader {\n    constructor(title) {\n        this.datasets = []\n        this.labels = []\n        this.yAxes = []\n        this.countries = []\n        this.yAxis = []\n        this.options = []\n        this.cases = []\n        this.display = true\n        this.max = null\n        this.title = title\n        this.dateMin = null\n        this.dateMax = null\n        this.countryName = \"\"\n    }\n\n    getData() {\n        return {\n            labels: this.labels,\n            datasets: this.datasets\n        }\n    }\n\n    setCaseCountry(country) {\n        this.countryName = country.name\n        const that = this\n        that.dateFormatData = null\n        const setDateFormat = function(date) {\n            const d = new Date(date)\n            let dDay = d.getUTCDate()\n            dDay = (dDay < 10) ? `0${dDay}` : dDay;\n            let dMonth = d.getUTCMonth() + 1;\n            dMonth = (dMonth < 10) ? `0${dMonth}` : dMonth\n            const dYear = d.getUTCFullYear()\n            that.dateFormatData = `${dYear}-${dMonth}-${dDay}`\n        }\n        const getDateFormat = function() {\n            return that.dateFormatData\n        }\n        const cases = country.cases\n        var data = []\n        var labels = []\n        for(var i = 0; i < cases.length; i++) {\n            if (this.dateMin == null) {\n                this.dateMin = cases[i].date\n            }\n            let item = cases[i]\n            data.push(item.cases)\n            setDateFormat(item.date)\n            labels.push(getDateFormat())\n            this.setTicks(item)\n        }\n\n        this.dateMax = cases[cases.length-1].date\n        this.setCountry(country, data, labels)\n    }\n\n    setTicks(item) {\n        if (this.max < item.cases) { \n            this.max = item.cases\n        }\n    }\n\n    getTicks() {\n        return this.max\n    }\n\n    getDateMin() {\n        return this.dateMin\n    }\n\n    getDateMax() {\n        return this.dateMax\n    }\n\n    getMaxCases() {\n        return 30\n    }\n\n    getTitle() {\n        return this.title\n    }\n\n    setCountry(country, data, labels) {\n        this.labels = labels\n        this.countries[this.countries.length+1] = country\n        var yAxis = `y-axis-${this.countries.length}`\n        this.datasets.push({\n            label: country.name,\n            data: data,\n            borderColor: country.color,\n            yAxisID: yAxis,\n            fill: true,\n            borderWidth: 2,\n            pointRadius: 0,\n\t\t\tpointHoverRadius: 0,\n            showLine: true,\n            borderDash: [5, 5],\n        })\n        this.options.push({\n            responseive: true,\n            title: {\n                display: true,\n                text: '21/11/2020'\n            },\n            tooltips: {\n                mode: 'index',\n                intersect: false,\n            },\n            hover: {\n                mode: 'nearest',\n                intersect: true\n            },\n            id: yAxis,\n            type: 'linear',\n            display: this.display,\n            position: 'left',\n            ticks: {\n                max: this.getTicks(),\n                min: 0\n            }\n        })\n        if (this.display) {\n            this.display = false\n        }\n    }\n}\n\nexport { Loader }","import { Loader } from './Loader.js'\nimport {\n    info,\n    states\n} from './StateCases/index.js'\n\nlet loader = new Loader(info.title);\n\nstates.forEach((country) => {\n    loader.setCaseCountry(country)\n});\n\nexport { loader }","import React from 'react';\nimport {\n  Line\n} from 'react-chartjs-2';\nimport './App.css';\nimport { loader } from './Data.js'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: this.props.value\n    }\n    this.chartReference = React.createRef();\n  }\n  handleChange(e) {\n    this.setState({\n      value: loader.getMaxCases()\n    })\n  }\n  render() {\n    const data = loader.getData()\n    const dateMin=loader.getDateMin()\n    const dateMax=loader.getDateMax()\n    const value=loader.getMaxCases()\n\n    return (\n      <div>\n      <Line\n        ref={this.chartReference}\n        data={data}\n        options={{\n\t\t\t\tresponsive: true,\n\t\t\t\thoverMode: 'index',\n\t\t\t\tstacked: false,\n\t\t\t\ttitle: {\n\t\t\t\t\tdisplay: true,\n\t\t\t\t\ttext: 'Confirmados de COVID-19 - ' + loader.title\n\t\t\t\t},\n\t\t\t\tscales: {\n          yAxes: loader.options,\n        }\n\t\t\t\t}}\n      />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}